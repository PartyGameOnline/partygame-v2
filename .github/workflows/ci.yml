# .github/workflows/ci.yml
name: CI
run-name: "CI • ${{ github.event_name }} • ${{ github.ref_name }} • ${{ github.actor }}"

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

# 同じブランチで古い実行はキャンセル（時間・課金の無駄を削減）
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 最小権限（必要十分）
permissions:
  contents: read

env:
  CI: true
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Lint / Test / Typecheck は Ubuntu で並列
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        task: [lint, test, typecheck]
    name: ${{ matrix.task }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install
        run: npm ci --no-audit --fund=false

      - name: Lint
        if: ${{ matrix.task == 'lint' }}
        run: npm run lint

      - name: Typecheck
        if: ${{ matrix.task == 'typecheck' }}
        run: npx tsc --noEmit

      - name: Test
        if: ${{ matrix.task == 'test' }}
        run: npm test --if-present

  # ビルドは Windows ランナーで（lightningcss のバイナリ問題を回避）
  build-windows:
    name: build (windows)
    runs-on: windows-latest
    timeout-minutes: 20
    needs: ci # ← 先に lint/test/typecheck が通ってからビルド
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install
        run: npm ci --no-audit --fund=false

      - name: Build
        run: npm run build

      # （任意）成果物をアーカイブしてデバッグしやすく
      # - name: Upload .next for inspection
      #   if: ${{ always() }}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: next-build
      #     path: .next
      #     if-no-files-found: ignore
