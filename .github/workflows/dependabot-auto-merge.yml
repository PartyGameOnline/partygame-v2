name: dependabot-auto-merge

on:
  # Dependabot が作る PR に対して発火
  pull_request:
    types: [opened, synchronize, reopened, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  automerge:
    # Dependabot の PR だけを対象にする
    if: github.actor == 'dependabot[bot]' || github.event.pull_request.user.login == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      # 1) Auto-merge を有効化（必須: pull-request-number）
      - name: Enable auto-merge
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

      # 2) すべてのチェックが success になるまで待つ（自身のワークフローは除外）
      - name: Wait for all required checks to pass
        uses: lewagon/wait-on-check-action@v1.3.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          running-workflow-name: dependabot-auto-merge
          wait-interval: 10
          allowed-conclusions: success

      # 3) フォールバック：まだ未マージなら手動で squash merge を試みる
      - name: Merge when green (fallback)
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const { data: prData } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
            });
            if (prData.merged) {
              core.info(`PR #${pr.number} already merged.`);
              return;
            }
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: 'squash',
            });
            core.info(`PR #${pr.number} merged.`);
